steps:
  # 1. Build the Docker image with an immutable tag based on the commit SHA.
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build Image'
    args:
      - 'build'
      - '-t'
      - 'europe-west1-docker.pkg.dev/vortex-ai-user/chatbot-repo/chatbot-service:$SHORT_SHA'
      - '.'

  # 2. Push the built image to Google Artifact Registry.
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push Image'
    args:
      - 'push'
      - 'europe-west1-docker.pkg.dev/vortex-ai-user/chatbot-repo/chatbot-service:$SHORT_SHA'

  # 3. Deploy the new revision to Cloud Run.
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Deploy to Cloud Run'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'chatbot-service'
      - '--image'
      - 'europe-west1-docker.pkg.dev/vortex-ai-user/chatbot-repo/chatbot-service:$SHORT_SHA'
      - '--region'
      - 'europe-west1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--service-account'
      - 'chatbot-runtime-sa@vortex-ai-user.iam.gserviceaccount.com'
      # Mount secrets: API keys as environment variables, credentials as a file.
      - '--update-secrets=TELEGRAM_BOT_TOKEN=TELEGRAM_BOT_TOKEN:latest,OPENAI_API_KEY=OPENAI_API_KEY:latest'
      - '--update-secrets=/etc/secrets/google-credentials.json=GOOGLE_APPLICATION_CREDENTIALS_JSON:latest'

# Track the produced artifact.
images:
  - 'europe-west1-docker.pkg.dev/vortex-ai-user/chatbot-repo/chatbot-service:$SHORT_SHA'

# Only Cloud Logging (bez Cloud Storage logs itp.).
options:
  logging: CLOUD_LOGGING_ONLY

# Force Cloud Build to run as its default service account (któremu nadałeś już role).
serviceAccount: 'projects/vortex-ai-user/serviceAccounts/157843431191@cloudbuild.gserviceaccount.com'
