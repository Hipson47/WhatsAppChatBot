steps:
  # Step 1: Build the container image using the Dockerfile in the 'backend' directory.
  # The image is tagged with the commit SHA for traceability.
  - name: 'gcr.io/cloud-builders/docker'
    id: Build
    args:
      - 'build'
      - '-t'
      - 'europe-west1-docker.pkg.dev/$PROJECT_ID/whatsapp-bot-repo/whatsapp-bot-service:$COMMIT_SHA'
      - '.'
      - '-f'
      - 'backend/Dockerfile'

  # Step 2: Push the container image to Google Artifact Registry.
  - name: 'gcr.io/cloud-builders/docker'
    id: Push
    args: ['push', 'europe-west1-docker.pkg.dev/$PROJECT_ID/whatsapp-bot-repo/whatsapp-bot-service:$COMMIT_SHA']

  # Step 3: Deploy the new image to Google Cloud Run.
  - name: 'gcr.io/google-cloud-sdk/gcloud'
    id: Deploy
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'whatsapp-bot-service' # This is the name of our Cloud Run service.
      - '--image=europe-west1-docker.pkg.dev/$PROJECT_ID/whatsapp-bot-repo/whatsapp-bot-service:$COMMIT_SHA'
      - '--region=europe-west1'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--service-account=whatsapp-bot-service-account@$PROJECT_ID.iam.gserviceaccount.com'
      - '--set-secrets=OPENAI_API_KEY=OPENAI_API_KEY:latest,TWILIO_ACCOUNT_SID=TWILIO_ACCOUNT_SID:latest,TWILIO_AUTH_TOKEN=TWILIO_AUTH_TOKEN:latest,TWILIO_PHONE_NUMBER=TWILIO_PHONE_NUMBER:latest,GOOGLE_APPLICATION_CREDENTIALS=gcp-sa-key:latest'
      - '--min-instances=0' # Set to 0 to save costs when not in use.
      - '--max-instances=2'

# This section registers the built image as an artifact of the build.
images:
  - 'europe-west1-docker.pkg.dev/$PROJECT_ID/whatsapp-bot-repo/whatsapp-bot-service:$COMMIT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY 