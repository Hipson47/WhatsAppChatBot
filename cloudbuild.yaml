steps:
  # Step 1: Build and Push the image in one command.
  # This uses gcloud's native build submission, which is better integrated
  # with GCP's IAM and Artifact Registry than the generic docker builder.
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Build and Push'
    args:
      - 'builds'
      - 'submit'
      - '--tag'
      - 'europe-west1-docker.pkg.dev/$PROJECT_ID/whatsapp-bot-repo/whatsapp-bot-service:$COMMIT_SHA'
      - '.'
      - '--gcs-source-staging-dir=gs://vortex-ai-user_cloudbuild/source' # IMPORTANT: Using your project ID here
      - '--file=backend/Dockerfile'

  # Step 2: Deploy the newly built image to Cloud Run.
  # This step remains the same.
  - name: 'gcr.io/google-cloud-sdk/gcloud'
    id: 'Deploy to Cloud Run'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'whatsapp-bot-service'
      - '--image=europe-west1-docker.pkg.dev/$PROJECT_ID/whatsapp-bot-repo/whatsapp-bot-service:$COMMIT_SHA'
      - '--region=europe-west1'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--service-account=whatsapp-bot-service@$PROJECT_ID.iam.gserviceaccount.com'
      - '--set-secrets=OPENAI_API_KEY=OPENAI_API_KEY:latest,TWILIO_ACCOUNT_SID=TWILIO_ACCOUNT_SID:latest,TWILIO_AUTH_TOKEN=TWILIO_AUTH_TOKEN:latest,TWILIO_PHONE_NUMBER=TWILIO_PHONE_NUMBER:latest,GOOGLE_APPLICATION_CREDENTIALS=gcp-sa-key:latest'
      - '--min-instances=0'
      - '--max-instances=2'

# The images section is no longer needed as the gcloud command handles the image artifact registration.
# options section remains the same.
options:
  logging: CLOUD_LOGGING_ONLY 